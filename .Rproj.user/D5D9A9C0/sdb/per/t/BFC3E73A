{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Análisis del movimiento de turistas en el destino de Maspalomas\"\nauthor: \"Christian González, Juan M. Hernández\"\naffiliation: \"Departamento de Métodos Cuantitativos en Economía y Gestión. Instituto Universitario de Turismo y Desarrollo Económico Sostenible<br>Universidad de Las Palmas de Gran Canaria</br>\"\ndate: \"Las Palmas de Gran Canaria, 26 octubre 2017\"\noutput:\n    revealjs::revealjs_presentation:\n        self_contained: false\n        center: TRUE\n        template: congresos.html\n        css: custom.css\n        highlight: tango\n        transition: none\n        background_transition: none\n        reveal_options:\n            progress: false\n---\n\n## Índice\n\n- Introducción\n- Modelo\n- Red de movimientos\n- Aplicaciones interactivas\n- Conclusiones\n\n## Introducción\n\n- El turismo es un sistema complejo y, por lo tanto, susceptible de ser analizado usando metodologías de redes complejas.\n- A growing model for the lodgings and services network in a destination. [Hernández y González Martel (2017), *Physica A: Statistical Mechanics and its Applications*, Elsevier, vol. 482(C), pages 296-307]\n- Nuestro **objetivo** era construir in modelo de crecimiento que representase el desarrollo de un destino turístico.\n\n\n## El modelo. Reglas de crecimiento\n![Regla de crecimiento](images/evolvingNtw.jpg)\n\n## Turismo 2.0 {data-background=#f8f3df}\n![Turismo 2.0](images/turismo20.jpg)\n\n## Los datos\n\n- Los datos fueron extraídos de la actividad turística desarrollada en Maspalomas desde 2002 a 2016.\n- Se utilizaron portales web sectoriales para recopilar las opiniones de los usuarios.\n\n![Regla de crecimiento](images/maspalomas.jpg)\n\n## Análisis descriptivo\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\nlibrary(readr)\nlibrary(dplyr)\nlibrary(highcharter)\n\n\nactiv <- read_rds('../160305 Tripadvisor/reviews_actividades/bd_actividades.Rds')\nactiv_comen <- activ %>%\n      group_by(lugar) %>%\n      summarise(num_count =n())\n\nhoteles <- read_rds('../160305 Tripadvisor/file_hoteles.Rds')\n\nhotel_comen <- hoteles %>%\n      group_by(hotel) %>%\n      summarise(num_count =n())\n\nrest <- read_rds(\"../160305 Tripadvisor/reviews_restaurantes/bd_restaurantes.Rds\")\n\nrest_comen <- rest %>%\n      group_by(lugar) %>%\n      summarise(num_count =n())\n\n\ncomentarios <- bind_rows(list(Hoteles = hoteles,Restaurantes = rest, Atractivos = activ),.id= \"origen\")\n\ncols <- c(\"#056b9e\",\"#88ba40\",\"#e16b09\")\n\n\nhighchart() %>%\n  hc_chart(type = \"column\") %>%\n  hc_title(text = \"Comentarios de hoteles, restaurantes y atractivos\") %>% \n  hc_subtitle(text = \"Comentarios de hoteles (223) referidos al destino de Maspalomas.<br> Comentarios de Restaurantes (2.379) y Atractivos (624) referidos al destino de Gran Canaria. Total comentarios: 243.823\")%>%\n  hc_xAxis(categories = c(\"Hoteles\", \"Restaurantes\", \"Atractivos\")) %>% \n  hc_add_series(data = c(nrow(hoteles),  nrow(rest),  nrow(activ)),name = \"Comentarios\", colorByPoint = TRUE) %>%\n  hc_colors(cols)\n```\n\n## Análisis descriptivo\n\n```{r,  echo=FALSE, message=FALSE, warning=FALSE}\ndatos_graf_anual <- comentarios %>%\n  mutate( origen = factor(origen,levels = c(\"Hoteles\", \"Restaurantes\", \"Atractivos\")),\n    anyo = lubridate:::year(date_rev)) %>%\n  group_by(anyo,origen) %>%\n  summarise(n=n()) %>%\n  arrange(origen)\n\n\nhchart(datos_graf_anual, \"bubble\", hcaes(x = origen, y = anyo, z = n, group = origen), maxSize = \"10%\")  %>%\n  hc_colors(cols) %>%\n  hc_xAxis(title = \"\") %>%\n  hc_title(text = \"Comentarios de hoteles, restaurantes y atractivos\") %>%\n  hc_yAxis(title = \"\") \n```\n\n\n## Network\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\nlibrary(igraph)\nservicios <- rbind(activ,rest)\n\nmain_hot <- hoteles %>%\n      select(user_id,date_rev,hotel)\nmain_serv <- servicios %>%\n      select(user_id,date_rev,lugar)\n\nmyfunct <- function (x,y) {\n      y$date_rev = y$date_rev-x\n      return(y)\n}\n\nmain_serv_ampliada <-lapply(-10:10,myfunct,y=main_serv) %>%\n      bind_rows()\n\n\ndb_conjunta <- inner_join(main_hot,main_serv_ampliada,by=c(\"user_id\",\"date_rev\"))\n\n\nhotel_comen <- hotel_comen[hotel_comen$hotel %in% db_conjunta$hotel,]\nhotel_comen$tipo <- rep(\"Hotel\",nrow(hotel_comen))\n\nactiv_comen <- activ_comen[activ_comen$lugar %in% db_conjunta$lugar,]\nactiv_comen$tipo <- rep(\"Actividad\",nrow(activ_comen))\n\nrest_comen <- rest_comen[rest_comen$lugar %in% db_conjunta$lugar,]\nrest_comen$tipo <- rep(\"Restaurante\",nrow(rest_comen))\n\nnames(hotel_comen)[1] <- \"lugar\"\ninst_com <- rbind(hotel_comen,rest_comen,activ_comen)\n\n\ndb_hotel_act <- db_conjunta %>%\n      group_by(hotel, lugar) %>% \n      summarise(nop_act = n()) %>%\n      arrange(hotel,desc(nop_act)) \n\nlista <- inst_com$lugar[duplicated(inst_com$lugar)]\n\nfor (x in lista) {\n       indx <- which(inst_com$lugar==x)\n       \n       if (inst_com$tipo[indx[1]]==\"Hotel\"){\n             inst_com$lugar[indx[1]] <- paste0(inst_com$lugar[indx[1]],\"_Hotel\")\n             indx2 <- which(db_hotel_act$hotel==x)\n             db_hotel_act$hotel[indx2] <- paste0(db_hotel_act$hotel[indx2],\"_Hotel\")\n       }\n       else if (inst_com$tipo[indx[1]]==\"Restaurante\"){\n             inst_com$num_count[indx[1]] <- sum(inst_com$num_count[indx])\n             inst_com <- inst_com[-indx[2],]\n             \n       }\n}\n\n\n\n\n\n\ndb_filtrada<- db_hotel_act %>% filter(nop_act > 15)\n\ninst_com_filtrada <- inst_com %>% filter(inst_com$lugar %in% db_filtrada$hotel | inst_com$lugar %in% db_filtrada$lugar)\ninst_com_filtrada$tipo <- factor(inst_com_filtrada$tipo, levels = c(\"Hotel\",\"Restaurante\",\"Actividad\"))\ninst_com_filtrada$tipo.num <- as.numeric(inst_com_filtrada$tipo)\n\n\nnet2 <- graph.data.frame(db_filtrada, inst_com_filtrada, directed=T)\n\n\nV(net2)$color <- cols[V(net2)$tipo.num]\n\n\nV(net2)$size <- V(net2)$num_count*0.005\n\nV(net2)$frame.color <- \"black\"\nV(net2)$label <- if_else(V(net2)$num_count>1500,inst_com_filtrada$lugar,NULL)\n\nE(net2)$arrow.mode <- 0\nE(net2)$width <- 1+E(net2)$nop_act*0.01\n\n\nl <- layout_with_fr(net2)\n\npar(mar=c(0,0,0,0))\n\nplot(net2,layout=l,\n     vertex.label.cex=0.75, \n     vertex.label.family=\"Helvetica\",\n     vertex.label.font=2,\n     vertex.shape=\"circle\", \n     vertex.label.color=\"black\",\n     asp = 0)\nlegend(x=-0.5, y=-0.98, c(\"Hotel\",\"Restaurante\", \"Atractivo\"), pch=21,col=\"black\", pt.bg=cols, pt.cex=1.5, cex=1, bty=\"n\", ncol=3,horiz=T)\n\n\n```\n\n\n## Network\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\nlibrary(networkD3)\n\n\nedgeList <- as.data.frame(get.edgelist(net2)) %>%\n  mutate(z = E(net2)$nop_act) %>%\n  setNames(c(\"SourceName\", \"TargetName\", \"Weight\"))\n\nnodeList <- data.frame(ID = c(0:(vcount(net2) - 1)), \nnName = V(net2)$name)\n\ngetNodeID <- function(x){\n  which(x == V(net2)$name) - 1 \n}\n\nedgeList <- plyr::ddply(edgeList, .variables = c(\"SourceName\", \"TargetName\", \"Weight\"), \n                        function (x) data.frame(SourceID = getNodeID(x$SourceName), \nTargetID = getNodeID(x$TargetName)))\n\nnodeList <- nodeList %>%\n  mutate(Size = V(net2)$num_count*0.05,\n         Tipo = V(net2)$tipo,\n         cols = cols[V(net2)$tipo.num])\n\nColourScale <- 'd3.scaleOrdinal()\n            .domain([\"Hotel\", \"Restaurante\", \"Actividad\"])\n           .range([\"#056b9e\",\"#88ba40\",\"#e16b09\"]);' \n\nforceNetwork(Links = edgeList, \n                        Nodes = nodeList, \n                        Source = \"SourceID\", \n                        Target = \"TargetID\", \n                        Value = \"Weight\", \n                        NodeID = \"nName\", \n                        Nodesize = \"Size\", \n                        Group = \"Tipo\",\n                        fontSize = 20, \n                        linkDistance = networkD3::JS(\"function(d) { return 0.5*d.value; }\"),\n                        linkWidth = networkD3::JS(\"function(d) { return d.value/50; }\"),\n                        opacity = 0.85, \n                        zoom = TRUE, \n                        opacityNoHover = 0.1,\n                        colourScale = JS(ColourScale))\n```\n\n\n## Geolocalización\n![Mapa](images/mapa.png)\n\n\n\n## Geolocalización\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\nlibrary(leaflet)\nlibrary(htmltools)\nlibrary(geosphere)\nlonlat_hoteles <- readRDS(\"../160305 Tripadvisor/lonlat_network_hoteles.Rds\")\nnames(lonlat_hoteles)[3]<-\"lugar\"\nlonlat_hoteles[3,c(\"lon\",\"lat\")] <- c(27.7644221,-15.5743847)\nlonlat_actividades <- readRDS(\"../160305 Tripadvisor/lonlat_network_actividades.Rds\")\nnames(lonlat_actividades)[3]<-\"lugar\"\n\nlonlat_restaurantes <- readRDS(\"../160305 Tripadvisor/lonlat_network_restaurantes.Rds\")\nnames(lonlat_restaurantes)[3]<-\"lugar\"\n\nlonlat_db <- bind_rows(lonlat_hoteles,lonlat_actividades,lonlat_restaurantes, .id=\"tipo\" )\nlonlat_db$tipo <- factor(lonlat_db$tipo,labels = c(\"Hotel\",\"Restaurante\",\"Atractivo\"), levels = c(1,3,2))\nnames(lonlat_db) <- c(\"tipo\",\"lat\",\"lon\",\"lugar\")\n\nmasp_comen <- rbind(hotel_comen,rest_comen,activ_comen)\n\nlonlat_db2 <- left_join(lonlat_db,masp_comen,by=\"lugar\") %>%\n  select(-tipo.y) %>%\n  mutate(radius = sqrt(num_count/pi))\n\npal <- colorFactor(cols, domain = c(\"Hotel\", \"Restaurante\", \"Atractivo\"))\n\n\ndb_enlaces <- inner_join(db_filtrada, lonlat_db, by = c(\"hotel\" = \"lugar\")) %>%\n      mutate(lon_origen = lat,\n             lat_origen = lon) %>%\n      select(lon_origen,lat_origen,hotel, lugar, nop_act) %>%\n      inner_join(lonlat_db) %>%\n      mutate(lon_destino = lat,\n             lat_destino = lon) %>%\n      select(lon_origen, lat_origen, lon_destino, lat_destino, hotel, lugar, nop_act)\n\nflows <- gcIntermediate(db_enlaces[,2:1], db_enlaces[,4:3], sp = TRUE, addStartEnd = TRUE)\n\nflows$counts <- db_enlaces$nop_act\nflows$origins <- db_enlaces$hotel\nflows$destinations <- db_enlaces$lugar\n\nhover <- paste0(flows$origins, \" to \", \n                flows$destinations, ': ', \n                as.character(flows$counts))\n   \nleaflet() %>%\n  addTiles() %>%\n  addCircleMarkers(data = lonlat_db2,\n                   radius = lonlat_db2$radius/2,\n                   color = ~pal(tipo.x),\n                   label = ~htmlEscape(paste0(lugar,\"(\",num_count,\")\"))) %>%\n  addProviderTiles(providers$CartoDB.Positron) %>%\n  addPolylines(data = flows, weight = flows$count, label = hover, color = \"#d1d5d7\")\n\n\n```\n\n## Geolocalización\n![Mapa](images/grancanaria.png)\n\n## Conclusiones \n\n- Proporciona información que pueden utilizar los hoteleros y proveedores de servicio para planficar sus actividades.\n\n- Se visualiza las rutas que siguen los turistas desde sus hoteles hasta sus servicios revelando necesidades de transporte.\n\n- Las autoridades encargadas de la gestión del transporte pueden utilizar esta información para cubrir estas necesidades o detectar sobrecapacidad en una ruta.\n\n## Líneas futuras\n\n- Ampliar el estudio a hoteles de la isla.\n- Analizar los trayectos de los turistas en función de las distancias, valoración de los servicios visitados.\n- Estudio en el desarrollo medioambiental de la isla.\n\n##\n\n![logos](images/finpresentacion.jpg)\n",
    "created" : 1508825896111.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1786852602",
    "id" : "BFC3E73A",
    "lastKnownWriteTime" : 1509093448,
    "last_content_update" : 1509093448148,
    "path" : "C:/Users/arama/Dropbox/171025 SALT/presentacion SALT 2017.Rmd",
    "project_path" : "presentacion SALT 2017.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}