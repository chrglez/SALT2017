{
    "collab_server" : "",
    "contents" : "---\ntitle: \"R Notebook\"\noutput: html_notebook\n---\n\nThis is an [R Markdown](http://rmarkdown.rstudio.com) Notebook. When you execute code within the notebook, the results appear beneath the code. \n\nTry executing this chunk by clicking the *Run* button within the chunk or by placing your cursor inside it and pressing *Ctrl+Shift+Enter*. \n\n```{r}\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(stringr)\nlibrary(purrr)\n\nyt1 <- read_excel(\"Patri_def.xlsx\")\nyt1 <- yt1[,1:16]\n\n#      yt1 <- read_excel(\"Patri_def.xlsx\",\n#                       col_names = #c(\"id\",\"nombre\",\"provincia\",\"ccaa\",\"origen\",\"tipo\",\"investigador\",#\"enlace\",\"titulo\",\"canal\",\"suscriptores\",\"visualizacion\",\"publicac#ion\",\"duracion\",\"like\",\"dislikes\"),\n#                       col_types = #c(\"numeric\",rep(\"text\",3),\"numeric\",rep(\"text\",6),\"numeric\",\"date\"#,\"text\",rep(\"numeric\",2)),\n#                       skip = 1)\n      \n\nyt2 <- read_excel(\"Dani_def.xlsx\")\nyt2 <- yt2[,1:16]      \n\n#      yt2 <- read_excel(\"Búsqued-dani.xlsx\",\n#                       col_names = #c(\"id\",\"nombre\",\"acrom\",\"provincia\",\"ccaa\",\"origen\",\"tipo\",\"invest#igador\",\"enlace\",\"titulo\",\"canal\",\"suscriptores\",\"visualizacion\",\"#publicacion\",\"duracion\",\"like\",\"dislikes\",\"borrar\"),\n#                       col_types = #c(\"numeric\",rep(\"text\",4),\"numeric\",rep(\"text\",6),\"numeric\",\"date\"#,\"text\",rep(\"numeric\",3)),\n#                       skip = 1) %>% \n#            select(-borrar,-acrom)\n\nyt_todas <- bind_rows(list(yt1,yt2))\n      \nnames(yt_todas)<-c(\"id\",\"nombre\",\"acrom\",\"provincia\",\"ccaa\",\"origen\",\"tipo\",\"enlace\",\"titulo\",\"canal\",\"suscriptores\",\"visualizacion\",\"publicacion\",\"duracion\",\"like\",\"dislikes\")\n\nyt <- yt_todas %>%\n      filter(!is.na(enlace)) %>%\n      mutate(d_segundos = duracion-ymd_hms(\"1899-12-30 00:00:00\"))\n\n#corregir_dur <- function(yt){\n#            yt$duracion <- yt$duracion %>%\n#      if_else((str_length(.)==5 | str_length(.)==4), #str_c(\"00_\",.),.) %>%\n#      str_replace_all(\"_\",\":\") %>%\n#      hms()\n            \n#            return(yt)\n#}\n\n#yt <- corregir_dur(yt)\n      \n#unique(yt$nombre)      \n\n\n```\n\nAdd a new chunk by clicking the *Insert Chunk* button on the toolbar or by pressing *Ctrl+Alt+I*.\n\nWhen you save the notebook, an HTML file containing the code and output will be saved alongside it (click the *Preview* button or press *Ctrl+Shift+K* to preview the HTML file).\n\n\n```{r eval=FALSE}\n\nuniversidades <- read_excel(\"universidades.xlsx\")\nuniversidades$ID <- str_trim(universidades$ID )\n\n\n\nlibrary(rvest)\nlibrary(tibble)\nlibrary(ggmap)\n\n\nurl <- universidades$Enlace[1]\npaginas <- url %>% GET() %>% read_html()\ndatos_uni <- paginas %>% html_nodes(\"label span:nth-child(2)\") %>% html_text()\n\n\nscrap_uni <- function(x){\n      page <- x %>%\n            GET() %>%\n            read_html()\n      \n      nombre_vbles <- page %>%\n            html_nodes(\"label span:nth-child(1)\")%>% \n                            html_text()\n      datos <- page %>%\n            html_nodes(\"label span:nth-child(2)\")%>%\n            html_text() %>%\n            t() %>%\n            data.frame()\n     names(datos) <- nombre_vbles\n     \n      \n     \n     if (!(\"Acrónimo :\" %in% names(datos))) datos <- datos %>% mutate(`Acrónimo :`= NA)\n     if (!(\"URL :\" %in% names(datos))) datos <- datos %>% mutate(`URL :`= NA)\n          \n     \n     \n     datos <- datos %>% select(`Código de la universidad :`,\n                         `Acrónimo :`,            \n                  `Tipo :`,\n                  `Administración Educativa Responsable :`,\n                  `Domicilio :`,\n                  `Código postal :`,\n                  `Localidad :`,\n                  `Municipio :`,\n                  `Provincia :`,\n                  `URL :`,\n                  `Año publicación :`)\n     \n    \n\n     return(datos)\n}\n\n\ndatos_uni_list <- map(universidades$Enlace[-3], scrap_uni) %>%\n      bind_rows()\n\nreadr::write_rds(datos_uni_list,\"datos_uni_sin_cruzar.rds\")\n\nnames(datos_uni_list) <- c(\"ID\",\"acronimo\",\"tipo\",\"admin_responsable\",\"domicilio\",\"CP\",\"localidad\",\"municipio\",\"provincia\",\"URL\",\"creacion\")\ndatos_uni_list$municipio <- factor(datos_uni_list$municipio)\ndatos_uni_list$provincia <- factor(datos_uni_list$provincia)\ndatos_uni_list$admin_responsable <- factor(datos_uni_list$admin_responsable)\ndatos_uni_list$tipo <- factor(datos_uni_list$tipo)\ndatos_uni_list$creacion <- as.numeric(datos_uni_list$creacion)\n\nuniv <- inner_join(universidades,datos_uni_list)\n\nreadr::write_rds(univ,\"universidades.rds\")\n\n\ndireccion <- univ %>% select(domicilio,localidad,provincia,CP) %>% apply( 1, paste , collapse = \",\" )\ngeocodes <- geocode(direccion)\nuniversidades <- cbind(univ,geocodes)\nuniversidades[2,c(\"lat\",\"lon\")]<- c(43.0623243,-2.5036963)\nuniversidades[49,c(\"lat\",\"lon\")]<-c(28.3905459,-16.5266153)\nuniversidades[61,c(\"lat\",\"lon\")]<-c(37.5885841,-5.6640658)\nuniversidades[72,c(\"lat\",\"lon\")]<-c(41.411544,2.1307231)\nreadr::write_rds(universidades,\"universidades_completa.rds\")\n```\n\n\n# MAPAS\n## Estático (solo universidades)\n\n```{r}\nlibrary(rgdal)\nlibrary(ggplot2)\nlibrary(RColorBrewer)\nuniversidades <- readr::read_rds(\"universidades_completa.rds\")\nuniv <- universidades\n\ncoordinates(universidades)<-~lon+lat\nproj4string(universidades)<-CRS(\"+proj=longlat +datum=NAD83\")\nuniversidades<-spTransform(universidades, CRS(proj4string(poligonos)))\n\nuniversidades<-data.frame(universidades)\n\nnames(universidades)[names(universidades)==\"lon\"]<-\"x\"\nnames(universidades)[names(universidades)==\"lat\"]<-\"y\"\n\n\n\n\n# Descargado de ...\npoligonos <- readOGR(\"mapas/Comunidades_Autonomas_ETRS89_30N.shp\",layer=\"Comunidades_Autonomas_ETRS89_30N\") \n#datos <- read.csv(\"M_casa_prov.csv\", stringsAsFactors = FALSE, sep = \";\")\n\n\n# Convierte los caracteres raros al importar en caracteres legibles\npoligonos$Texto <- as.factor(iconv(as.character(poligonos$Texto), \"utf-8\",\"latin1\"))\npoligonos$Texto_Alt <- as.factor(iconv(as.character(poligonos$Texto_Alt), \"utf-8\",\"latin1\"))\n\n\n# Creamos una columna Id.prov que rocoja los códigos de provincias para después\n# hacer el merge con datos\npoligonos$Id.CCAA <- as.numeric(levels(poligonos$Codigo))[poligonos$Codigo]\n\n# Creamos una columna id para cada provincia. Necesario para hacer pasar a dataframe\npoligonos@data$id = rownames(poligonos@data)\n\n#Cruzamos polígonos con datos por Id.prov que habíamos creado antes\n#poligonos@data <- merge(poligonos@data, datos, by=\"Id.CCAA\")\n\n# Pasamos polígonos a dataframe\npoligonos.points<-fortify(poligonos)\npoligonosDF <- merge(poligonos.points, poligonos@data, by = \"id\")\n\n# Subimos Canarias\npoligonosDF[poligonosDF$Texto == \"Canarias\",\"long\"] <- \n      poligonosDF[poligonosDF$Texto == \"Canarias\",\"long\"] +  450000\n\npoligonosDF[poligonosDF$Texto == \"Canarias\",\"lat\"] <- \n      poligonosDF[poligonosDF$Texto == \"Canarias\",\"lat\"] +  450000\n\n# Creamos gráfico con ggplot\nplotclr <- brewer.pal(max(datos$interval),\"Reds\")\n\n\nuniversidades[universidades$admin_responsable ==\"Comunidad Autónoma de Canarias\",\"x\"] = \n      universidades[universidades$admin_responsable ==\"Comunidad Autónoma de Canarias\",\"x\"] + 450000\n\nuniversidades[universidades$admin_responsable ==\"Comunidad Autónoma de Canarias\",\"y\"] = \n      universidades[universidades$admin_responsable ==\"Comunidad Autónoma de Canarias\",\"y\"] + 450000\n\n\nggwarp <- ggplot(data = poligonosDF, aes(x=long, y=lat,group=group)) +\n      geom_polygon(fill = \"#47413c\")  +\n      geom_path(colour = \"white\") +\n      geom_point(data=universidades ,aes(x = x, y = y),inherit.aes=FALSE, shape = 21, colour = \"white\", fill = \"#bd3d4a\", size = 3, stroke = 2) +\n     #       geom_point(data=universidades ,aes(x = x, y = y),inherit.aes=FALSE, alpha = 0.8,size=4,color=\"white\") +\n#      geom_point(data=universidades ,aes(x = x, y = y),inherit.aes=FALSE, alpha = 0.8,size=2,color=\"#bd3d4a\") +\n      coord_equal()+\n\n      #scale_fill_manual(name=\"Título leyenda.\",\n      #                  values = plotclr)+\n      theme(#title = element_blank(),\n            axis.text = element_blank(),\n            axis.ticks = element_blank(),\n            axis.title = element_blank(),\n            strip.text.y = element_text(size=10, face=\"bold\"),\n            panel.background = element_rect(fill = \"#47413c\", colour = \"#47413c\"),\n             panel.grid.major = element_blank(),\n            panel.grid.minor = element_blank(),\n            plot.background = element_rect(fill = \"#47413c\"))\nprint(ggwarp)\n\n```\n\n\n\n## Interactivo (solo universidades)\n\n```{r}\nlibrary(leaflet)\nlibrary(htmltools)\n\ngetColor <- function(universidad) {\n  if_else(universidad$tipo==\"Pública\",\"green\",\"#bd3d4a\")\n}\n\nicons <- awesomeIcons(\n  icon = 'fa-book',\n  iconColor = 'black',\n  library = 'fa',\n  markerColor = getColor(universidades)\n)\n\n\n\n\nleaflet(univ) %>% \n  addTiles() %>%\n      addProviderTiles(providers$CartoDB.Positron) %>%\n  fitBounds(-18.142573,27.721074,3.894245,43.544230) %>%\n      addAwesomeMarkers(~lon,\n                        ~lat,\n                        icon=icons,\n                        label=~htmlEscape(Universidad))\n```\n\n## Interactivo (universidades sin videos)\n\n```{r}\nlibrary(leaflet)\nlibrary(htmltools)\n\nuniv$color2 <- as.character(univ$tipo)\nuniv$color2[!(univ$Universidad %in% yt_df$Universidad)] <- \"gris\"\n\ngetColor2 <- function(universidad) {\n  if_else(universidad$color2==\"gris\",\"gray\",\n          if_else(universidad$color2==\"Pública\",\"green\",\"#bd3d4a\"))\n}\n\nicons <- awesomeIcons(\n  icon = 'fa-book',\n  iconColor = 'black',\n  library = 'fa',\n  markerColor = getColor2(univ)\n)\n\n\n\n\nleaflet(univ) %>% \n  addTiles() %>%\n      addProviderTiles(providers$CartoDB.Positron) %>%\n  fitBounds(-18.142573,27.721074,3.894245,43.544230) %>%\n      addAwesomeMarkers(~lon,\n                        ~lat,\n                        icon=icons,\n                        label=~htmlEscape(Universidad))\n```\n\n\n\n## Interactivo 2 (solo universidades)\n\n```{r}\nlibrary(leaflet)\n\nleaflet() %>% \n  addTiles() %>%\n      addProviderTiles(providers$CartoDB.Positron) %>%\n  fitBounds(-18.142573,27.721074,3.894245,43.544230) %>% \n  addCircleMarkers(univ$lon, \n                   univ$lat, \n                   color = getColor(universidades), \n                   radius = 6, \n                   fill = T,\n                   fillOpacity = 0.2,\n                   opacity = 0.6,\n                   label = univ$Universidad)\n```\n\n\n\n## Uniendo datos de yt\n\n```{r}\n\nuniv$Universidad <- str_trim(univ$Universidad)\n\nm_dist <- adist(yt_df$nombre,univ$Universidad)\n\nindx <- apply(m_dist,1,which.min)\nindx[c(6,15,18,23)]=c(76,80,48,82)\n```\n\n### Gráfico\n```{r}\nyt_df <- yt %>%\n      group_by(nombre) %>%\n      summarise(num_videos = n(),\n                num_vis = sum(visualizacion),\n                min_totales = sum(tiempo),\n                dur_media = mean(tiempo),\n                likes = sum(like))\n\nyt_df$Universidad <- univ$Universidad[indx]\n\nyt_df_sql <- inner_join(yt_df,univ %>% select(Universidad,tipo,lon,lat))\n\n\ngetColor <- function(universidad) {\n  if_else(universidad$tipo==\"Pública\",\"green\",\"#bd3d4a\")\n}\n\nleaflet(yt_df_sql) %>% \n      addTiles() %>%\n      addProviderTiles(providers$CartoDB.Positron) %>%\n      fitBounds(-18.142573,27.721074,3.894245,43.544230) %>% \n      addCircleMarkers(~lon, \n                       ~lat, \n                       color = getColor(yt_df_sql), \n                       radius = ~min_totales/3000, \n                       fill = T,\n                       fillOpacity = 0.2,\n                       opacity = 0.6,\n                       label = ~paste0(Universidad,\": \",round(min_totales/3600,2),\" h.\"))\n\n\n```\n\n# Interactivo 2\n\n```{r}\n\nyt_df_sql$interval <- cut(yt_df_sql$num_videos,breaks=round(quantile(yt_df_sql$num_videos)),include.lowest = TRUE)\n\nqpal <- colorFactor(\"Blues\", yt_df_sql$interval)\n\nicons <- awesomeIcons(\n  icon = 'fa-book',\n  iconColor = 'black',\n  library = 'fa',\n  markerColor = qpal(yt_df_sql$interval)\n)\n\n\n\n\nleaflet(yt_df_sql) %>% \n  addTiles() %>%\n      addProviderTiles(providers$CartoDB.Positron) %>%\n  fitBounds(-18.142573,27.721074,3.894245,43.544230) %>%\n      addAwesomeMarkers(~lon,\n                        ~lat,\n                        icon=icons,\n                        label=~htmlEscape(paste0(Universidad,\" \",num_videos))\n                        #,\n                        #clusterOptions = markerClusterOptions(showCoverageOnHover = FALSE)\n                        )%>%\n      addLegend(pal = qpal, values = ~interval, opacity = 1)\n```\n\n## Lineal\n```{r}\nlibrary(highcharter)\n\nchart1 <- yt %>%\n      mutate(anyo = year(yt$publicacion)) %>%\n      group_by(anyo) %>%\n      summarise(num = n()) %>%\n      na.omit()\n\nhighchart() %>%\n      hc_add_series(data = chart1$num, type = \"column\",\n                    name = \"Vídeos\",\n                    color = \"#bd3d4a\", showInLegend = FALSE) %>%\n      hc_yAxis(title = list(text = \"Número de vídeos publicados\"), allowDecimals = FALSE) %>%\n      hc_xAxis(categories = chart1$anyo,\n               tickmarkPlacement = \"on\",\n               opposite = FALSE) %>%\n      hc_title(text = \"Número de vídeos publicados\",\n               style = list(fontWeight = \"bold\")) %>%\n      hc_subtitle(text = \"Número de vídeos publicados,\n                  2009 - 2017\") %>%\n      hc_tooltip(valueDecimals = 0,\n                 pointFormat = \"Vídeos:  {point.y}\") %>%\n      hc_credits(enabled = TRUE,\n                 text = \"Fuente: Elaboración propia\",\n                 style = list(fontSize = \"10px\")) %>%\n      hc_add_theme(hc_theme_538())\n\n```\n## treemap\n\n```{r}\nyt_df_sql %>%\n      select(Universidad,num_videos,num_vis)%>%\n      glimpse() %>%\n      hchart(\"treemap\", hcaes(x = Universidad, value = num_videos, color = num_vis), palette = \"BuGn\")\n```\n\n\n```{r}\nlibrary(gridExtra)\nhist_top <- ggplot(yt)+geom_histogram(aes(as.numeric(d_segundos/60)),fill=\"chocolate\")+\n      scale_x_log10() + scale_y_log10() +\n      theme_classic() + labs(x=\"minutos\", y=\"\")\n\nempty <- ggplot()+geom_point(aes(1,1), colour=\"white\")+\n      theme(axis.ticks=element_blank(), \n            panel.background=element_blank(), \n            axis.text.x=element_blank(), axis.text.y=element_blank(),           \n            axis.title.x=element_blank(), axis.title.y=element_blank())\n\nscatter <- ggplot(yt)+geom_point(aes(as.numeric(d_segundos/60), visualizacion),size=1.5)+\n      scale_x_log10() + scale_y_log10()  +\n      geom_hline(yintercept=mean(yt$visualizacion), color=\"darkblue\")+\n      \n      geom_vline(aes(xintercept=mean(as.numeric(yt$d_segundos/60))), color=\"chocolate\")+\n      geom_text(data=cruce,aes(x=as.numeric(x),y=as.numeric(y),label=label))+\n      theme_classic() + labs(x=\"minutos\", y=\"visualizaciones\")\n\nhist_right <- ggplot(yt)+geom_histogram(aes(visualizacion), fill=\"darkblue\")+\n      coord_flip()+ scale_x_log10() + scale_y_log10() + theme_classic() + labs(x=\"visualizaciones\", y=\"\")\n\np<- grid.arrange(hist_top, empty, scatter, hist_right, ncol=2, nrow=2, widths=c(4, 1), heights=c(1, 4))\n\ncruce = data.frame(x=c(mean(yt$d_segundos/60)+2,0.2),y=c(1,mean(yt$visualizacion)+2000),label=round(c(mean(yt$d_segundos/60),mean(yt$visualizacion))),2)\n\nggsave(\"scat_hist.png\",p)\n```\n```{r}\nlibrary(highcharter)\n\nchart3 <- chart2 %>% gather(vble,valor)\n\nhighchart() %>%\n      hc_add_series(data = chart3$valor, type = \"column\",\n                    name = \"Likes\",\n                    color = \"#bd3d4a\", showInLegend = FALSE) %>%\n      hc_yAxis(title = list(text = \"Likes/Dislikes\"), allowDecimals = FALSE) %>%\n      hc_xAxis(categories = chart3$vble,\n               tickmarkPlacement = \"on\",\n               opposite = FALSE) %>%\n      hc_title(text = \"Número de vídeos publicados\",\n               style = list(fontWeight = \"bold\"))\n      hc_tooltip(valueDecimals = 0,\n                 pointFormat = \"Likes:  {point.y}\") %>%\n      hc_credits(enabled = TRUE,\n                 text = \"Fuente: Elaboración propia\",\n                 style = list(fontSize = \"10px\")) %>%\n      hc_add_theme(hc_theme_538())\n\nggplot(chart2)+geom_bar()      \n      \n```\n\n",
    "created" : 1508998696785.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4040173650",
    "id" : "E9851ED8",
    "lastKnownWriteTime" : 1497458320,
    "last_content_update" : 1497458320,
    "path" : "C:/Users/arama/Desktop/170608 ASEPUMA A Coruña/Youtube/youtube_calculos.Rmd",
    "project_path" : null,
    "properties" : {
        "chunk_output_type" : "inline"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}